// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var TestFramework = require("reason-test-framework/src/TestFramework.bs.js");

Curry._2(TestFramework.describe, "Assertions", (function (param) {
        var test = param.test;
        Curry._2(test, "runs simple tests", (function (param) {
                var expect = param.expect;
                Curry._1(Curry._1(expect.int, 2).toBe, 2);
                Curry._1(Curry._1(expect.int, 3).toBe, 3);
                Curry._1(Curry._1(expect.bool, true).toBe, true);
                Curry._2(Curry._1(expect.float, 1.0).toBeCloseTo, undefined, 1.0);
                Curry._1(Curry._1(expect.string, "hello").not.toEqual, "goodbye");
                Curry._1(Curry._1(expect.string, "").toBeEmpty, undefined);
                Curry._1(Curry._2(expect.arrayOf, /* Int */2, [
                          1,
                          2,
                          3
                        ]).toEqual, [
                      1,
                      2,
                      3
                    ]);
                Curry._1(Curry._2(expect.listOf, /* String */0, {
                          hd: "a",
                          tl: {
                            hd: "b",
                            tl: /* [] */0
                          }
                        }).toEqual, {
                      hd: "a",
                      tl: {
                        hd: "b",
                        tl: /* [] */0
                      }
                    });
                return Curry._1(Curry._1(expect.value, {
                                TAG: /* Ok */0,
                                _0: 1
                              }).toEqual, {
                            TAG: /* Ok */0,
                            _0: 1
                          });
              }));
        Curry._2(param.testAsync, "runs async tests", (function (param) {
                var expect = param.expect;
                var callback = param.callback;
                setTimeout((function (param) {
                        Curry._1(Curry._1(expect.int, 2).toBe, 2);
                        return Curry._1(callback, undefined);
                      }), 0);
                
              }));
        return Curry._2(test, "produces snapshots", (function (param) {
                      var expect = param.expect;
                      Curry._1(Curry._1(expect.string, "hello").toMatchSnapshot, undefined);
                      return Curry._1(Curry._1(expect.value, {
                                      id: 1
                                    }).toMatchSnapshot, undefined);
                    }));
      }));

Curry._2(TestFramework.describe, "Lifecycle", (function (param) {
        var test = param.test;
        var persistentValue = {
          contents: 0
        };
        Curry._1(param.beforeEach, (function (param) {
                persistentValue.contents = persistentValue.contents + 1 | 0;
                
              }));
        Curry._1(param.afterEach, (function (param) {
                persistentValue.contents = persistentValue.contents - 1 | 0;
                
              }));
        Curry._2(test, "runs lifecycle the first time", (function (param) {
                return Curry._1(Curry._1(param.expect.int, persistentValue.contents).toBe, 1);
              }));
        return Curry._2(test, "runs lifecycle each time", (function (param) {
                      return Curry._1(Curry._1(param.expect.int, persistentValue.contents).toBe, 1);
                    }));
      }));

/*  Not a pure module */
