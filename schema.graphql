type GlobalState @entity {
  id: ID! #Singleton "MASTER"
  latestMasterTokenId: BigInt!
  currentExpectedTokenSupply: BigInt!
  minBidIncreasePercent: BigInt!
  artistSecondSalePercentage: BigInt!
  platformAddress: Bytes!
}

type ArtworkMaster @entity {
  id: ID! # master token id - creator address
  creator: Artist!
  masterId: BigInt!
  layerCount: BigInt!
  platformFirstSalePercentage: BigInt!
  platformSecondSalePercentage: BigInt!
}

type Artist @entity {
  id: ID! # artists address
}

type EventParam @entity {
  id: ID!
  index: Int!
  param: String!
  paramName: String!
  paramType: String!
}

type EventParams @entity {
  id: ID!
  index: Int!
  eventName: String!
  params: [EventParam!]!
}

# For every transaction, list the changes, and stat
type StateChange @entity {
  id: ID! # tx
  timestamp: BigInt!
  blockNumber: BigInt!
  contractVersion: Int!
  txEventList: [String!]! #call event logs or something
  txEventParamListDeprecated: [String!]!
  txEventParamList: [EventParams!]
  ownerChanges: [Owner!]!
  artworkChanges: [Artwork!]!
}

type Owner @entity {
  id: ID!
}

type Artwork @entity {
  id: ID!
}
